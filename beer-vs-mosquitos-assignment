{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "BW8YnRfi0fjU"
      },
      "source": [
        "## Assignment 1\n",
        "\n",
        "This assignment is based on the video discussed in module 1.\n",
        "\n",
        "John Rauser ( 2014). Statistics Without the Agonizing Pain. Strata Hadoop 2014. Retrieved from https://www.youtube.com/watch?v=5Dnw46eC-0o\n",
        "\n",
        "(Source: https://www.youtube.com/watch?v=5Dnw46eC-0o )\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "  \n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "vwt65ZKj0fjY"
      },
      "source": [
        "## Learning outcomes"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Ui7Y8iYh0fjY"
      },
      "source": [
        "- Use code to work with data\n",
        "- Calculate basic statistical measures\n",
        "- Implement a data simulation by using resampling\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4vktoauU0fjZ"
      },
      "source": [
        "**Question**\n",
        "\n",
        "1. Using the dataset from the video ( _mosquitos_data.csv_) in the folder, write Python code to:\n",
        "\n",
        "    - Create side-by-side boxplots for the number of mosquitos in each group ( _beer vs water)\n",
        "    - What does the graph reveal about the data for both groups?  Is there an association between beer       consumption and attractiveness to mosquitos.\n",
        "    - Calculate basic statistics measures for each group: Mean, median, standard deviation and explain the numbers.\n",
        "\n",
        "2. Write code to implement the data simulation demonstrated in the above mentioned video.  Calculate the probability of obtaining the experiment outcome assuming no association between beer consumption."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FGfoWdcL0fjZ"
      },
      "source": [
        "## Hints\n",
        "\n",
        "- Use pandas, matplotlib, or seaborn to plot boxplots in Python.\n",
        "- Label the graphs wherever applicable e.g, title, legend, units etc.\n",
        "\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## IMPORT DATA"
      ],
      "metadata": {
        "id": "7hwDaNBp0caJ"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 93,
      "metadata": {
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "i2hFbvSy0fja",
        "outputId": "b53a8029-70ca-4add-af54-a81a01407f65"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    Response Treatment\n",
            "0         27      Beer\n",
            "1         20      Beer\n",
            "2         21      Beer\n",
            "3         26      Beer\n",
            "4         27      Beer\n",
            "5         31      Beer\n",
            "6         24      Beer\n",
            "7         21      Beer\n",
            "8         20      Beer\n",
            "9         19      Beer\n",
            "10        23      Beer\n",
            "11        24      Beer\n",
            "12        28      Beer\n",
            "13        19      Beer\n",
            "14        24      Beer\n",
            "15        29      Beer\n",
            "16        18      Beer\n",
            "17        20      Beer\n",
            "18        17      Beer\n",
            "19        31      Beer\n",
            "20        20      Beer\n",
            "21        25      Beer\n",
            "22        28      Beer\n",
            "23        21      Beer\n",
            "24        27      Beer\n",
            "25        21     Water\n",
            "26        22     Water\n",
            "27        15     Water\n",
            "28        12     Water\n",
            "29        21     Water\n",
            "30        16     Water\n",
            "31        19     Water\n",
            "32        15     Water\n",
            "33        22     Water\n",
            "34        24     Water\n",
            "35        19     Water\n",
            "36        23     Water\n",
            "37        13     Water\n",
            "38        22     Water\n",
            "39        20     Water\n",
            "40        24     Water\n",
            "41        18     Water\n",
            "42        20     Water\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "mosq_df = pd.read_csv('mosq_data.csv')\n",
        "\n",
        "print(mosq_df)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## SIDE BY SIDE BOX PLOTS\n"
      ],
      "metadata": {
        "id": "F1Uhv83j0WXs"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "\n",
        "fig, axes = plt.subplots(1, 2, figsize = (10,5), sharey = True)\n",
        "\n",
        "# Beer Boxplot\n",
        "sns.boxplot(y=mosq_df[mosq_df[\"Treatment\"] == \"Beer\"][\"Response\"], ax =axes[0], color='#FFDB58')\n",
        "axes[0].set_title(\"Response for Beer\")\n",
        "axes[0].set_xlabel(\"Beer\")\n",
        "\n",
        "# Water Boxplot\n",
        "sns.boxplot(y=mosq_df[mosq_df[\"Treatment\"] == \"Water\"][\"Response\"], ax =axes[1], color='#63C5DA')\n",
        "axes[1].set_title(\"Response for Water\")\n",
        "axes[1].set_xlabel(\"Water\")\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 507
        },
        "id": "nZ_Oe-FitjCI",
        "outputId": "df27c29a-beec-480b-906b-473d7a91aab8"
      },
      "execution_count": 94,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 2 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAA90AAAHqCAYAAAAZLi26AAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAR2BJREFUeJzt3XlcVmX+//H3LcqNsgbKpqi4Z26TuZtCLkB93c2xzSXNb4U26mhp5b5Q1oxNo+lYbi1m41pZWmrilphLWpqRoqQmuMumIML5/dHP+9sdiAgcboHX8/E4jzznXOc6nwtnvHjfZ7kthmEYAgAAAAAARa6cowsAAAAAAKC0InQDAAAAAGASQjcAAAAAACYhdAMAAAAAYBJCNwAAAAAAJiF0AwAAAABgEkI3AAAAAAAmIXQDAAAAAGASQjcAAAAAACYhdAMokc6ePau+ffvKx8dHFotFb731lqNLAgDgrsN8CTgeoRsw2ZIlS2SxWGxL+fLlVbVqVQ0aNEi//fabo8srsUaNGqWvvvpK48eP1wcffKDw8HBTz/fHv0OLxSJXV1c1bNhQ06dP19WrV009NwCUBcyX5iiu+TIrK0seHh7q0aNHjn2zZ8+WxWLRwIEDc+ybOHGiLBaLfvnll3yf69tvv9XkyZN15cqVwpQMFJvyji4AKCumTp2q4OBgpaenKyYmRkuWLNGOHTt06NAhubi4OLq8Euebb75Rjx49NGbMmGI7Z5cuXTRgwABJUmpqqrZv364JEybo4MGDWrFiRbHVAQClGfNl0Squ+dLJyUmtW7fWt99+m2Pfzp07Vb58ee3cuTPXfb6+vqpXr16+z/Xtt99qypQpGjRokLy8vApTNlAsCN1AMYmIiNADDzwgSRo6dKgqV66s119/XZ999pn69evn4OpKnnPnzhXpRJueni5nZ2eVK3frG4Dq1aunJ5980rb+7LPP6vr161q9erXS09OL9ZfB/NQLACUR82XRKs75sn379tq4caOOHDmie++917Z9586d6tevn5YtW6bExET5+/tLkm7cuKHdu3era9euRVZfYVy9elWVKlVydBkohfhtDXCQBx98UJIUFxdnt/3nn39W37595e3tLRcXFz3wwAP67LPP7NpkZmZqypQpqlu3rlxcXOTj42Ob6G4aNGiQ3NzcdPz4cYWFhcnV1VWBgYGaOnWqDMOw6y8tLU1///vfFRQUJKvVqvr16+vNN9/M0c5isWj48OFau3atGjVqJKvVqvvuu08bNmywa5eSkqKRI0eqZs2aslqt8vX1VZcuXbR//367drt371Z4eLg8PT1VqVIldezYMddPwf/o5u2HhmFo7ty5ttsQbzp+/LgeffRReXt7q1KlSmrdurW++OILuz6io6NlsVi0fPlyvfrqq6pataoqVaqk5OTkPM+dG39/f9ttkAUZ22+//aann35afn5+tp/nokWLTKsXAEoa5suSM1+2b99ekuxqO378uBITEzV8+HC5uLjY7Ttw4IDS0tJsx/3www8aNGiQatWqJRcXF/n7++vpp5/WxYsXbcdMnjxZY8eOlSQFBwfbxhUfH29r8+GHH6p58+aqWLGivL291b9/f506dcqu1pCQEDVq1Ej79u1Thw4dVKlSJb388st5/kyBguJKN+AgNyeHe+65x7bt8OHDateunapWrapx48bJ1dVV//3vf9WzZ0+tWrVKvXr1kvT7hBMVFaWhQ4eqZcuWSk5O1t69e7V//3516dLF1l9WVpbCw8PVunVrzZo1Sxs2bNCkSZN048YNTZ06VZJkGIa6d++uLVu2aMiQIWrWrJm++uorjR07Vr/99ptmz55tV/eOHTu0evVqPf/883J3d9fbb7+tPn366OTJk/Lx8ZH0+xXglStXavjw4WrYsKEuXryoHTt26MiRI7r//vsl/X67W0REhJo3b65JkyapXLlyWrx4sR566CFt375dLVu2zPXn1qFDB33wwQd66qmn7G73ln5/WUzbtm119epVvfDCC/Lx8dHSpUvVvXt3rVy50vbzu2natGlydnbWmDFjlJGRIWdn5zz/ztLT03XhwgVJv//itXPnTi1dulSPP/64XejO79jOnj2r1q1b2345q1KlitavX68hQ4YoOTlZI0eOLFS9AFAaMF+WnPmydevWKl++vHbs2KGhQ4dK+j2Au7q6qkWLFnrggQe0c+dO9enTx7ZP+r+wvnHjRh0/flyDBw+Wv7+/Dh8+rAULFujw4cOKiYmRxWJR79699csvv+jjjz/W7NmzVblyZUlSlSpVJEkzZszQhAkT1K9fPw0dOlTnz5/Xv//9b3Xo0EHff/+93VX/ixcvKiIiQv3799eTTz4pPz+/XMcFFJoBwFSLFy82JBmbNm0yzp8/b5w6dcpYuXKlUaVKFcNqtRqnTp2yte3UqZPRuHFjIz093bYtOzvbaNu2rVG3bl3btqZNmxqPPPJInucdOHCgIckYMWKEXV+PPPKI4ezsbJw/f94wDMNYu3atIcmYPn263fF9+/Y1LBaLcezYMds2SYazs7PdtoMHDxqSjH//+9+2bZ6enkZkZOQta8vOzjbq1q1rhIWFGdnZ2bbtV69eNYKDg40uXbrkObabtfz5HCNHjjQkGdu3b7dtS0lJMYKDg42aNWsaWVlZhmEYxpYtWwxJRq1atYyrV6/e9lw3z5fb0rNnzxx/X/kd25AhQ4yAgADjwoULdufq37+/4enpaautIPUCQEnDfJlTSZwvW7RoYdSuXdu2/r//+79GaGioYRiG8eKLLxotWrSw7evbt69RqVIlIzMz0zauP/v4448NSca2bdts29544w1DknHixAm7tvHx8YaTk5MxY8YMu+0//vijUb58ebvtHTt2NCQZ8+fPz9e4gMLg9nKgmHTu3FlVqlRRUFCQ+vbtK1dXV3322WeqVq2aJOnSpUv65ptv1K9fP6WkpOjChQu6cOGCLl68qLCwMB09etT29lYvLy8dPnxYR48eve15hw8fbvvzzSuq169f16ZNmyRJX375pZycnPTCCy/YHff3v/9dhmFo/fr1OcZRu3Zt23qTJk3k4eGh48eP27Z5eXlp9+7dOnPmTK41HThwQEePHtXjjz+uixcv2saalpamTp06adu2bcrOzr7t2P7syy+/VMuWLW2fmEuSm5ubhg0bpvj4eP3000927QcOHKiKFSvmu/8ePXpo48aN2rhxoz799FONHz9eGzZs0OOPP267tTC/YzMMQ6tWrVK3bt1kGIat3YULFxQWFqakpKQctxfeab0AUBIxX/6fkjhftm/fXnFxcUpMTJT0+9Xstm3bSpLatWun77//3vatHzt37lSrVq1sd4v98Rw37y5r3bq1JOWYE3OzevVqZWdnq1+/fnbzqr+/v+rWrastW7bYtbdarRo8eHC+xgUUBreXA8Vk7ty5qlevnpKSkrRo0SJt27ZNVqvVtv/YsWMyDEMTJkzQhAkTcu3j3Llzqlq1qqZOnaoePXqoXr16atSokcLDw/XUU0+pSZMmdu3LlSunWrVq2W27+XbQm7fr/frrrwoMDJS7u7tdu5svQPn111/ttlevXj1HXffcc48uX75sW581a5YGDhyooKAgNW/eXA8//LAGDBhgq+XmLz+5fXXITUlJSXa3EubHr7/+qlatWuXY/sexNGrUyLY9ODj4jvqvVq2aOnfubFvv3r27fHx8NGbMGK1bt07dunXL99gyMzN15coVLViwQAsWLMi13blz5+zW77ReACiJmC9L9nzZvn17zZ49Wzt37lSnTp10+PBhzZo1S5LUtm1b3bhxQ999951q1KihhIQE223o0u8fqEyZMkXLly/PMQcmJSXd9txHjx6VYRiqW7durvsrVKhgt161alUe1UKxIHQDxaRly5a2t7H27NlT7du31+OPP67Y2Fi5ubnZPqkeM2aMwsLCcu2jTp06kn5/TisuLk6ffvqpvv76a7333nuaPXu25s+fbzd5mcHJySnX7cYfXiLTr18/Pfjgg1qzZo2+/vprvfHGG3r99de1evVqRURE2Mb6xhtvqFmzZrn25+bmVuS1/1lRXDXu1KmTJGnbtm3q1q1bvsd286UwTz755C1/mfrzL4Vc5QZQFjBfluz58ubV8x07dtjeBN6mTRtJUuXKlVW3bl3t2LHD9mKzP15t79evn7799luNHTtWzZo1s/19h4eH5+uKfnZ2tiwWi9avX5/rz//PPyvmVRQXQjfgAE5OToqKilJoaKjmzJmjcePG2T7VrlChgt3V1Fvx9vbW4MGDNXjwYKWmpqpDhw6aPHmy3S8R2dnZOn78uN13X/7yyy+SpJo1a0qSatSooU2bNiklJcXu0/uff/7Ztr8gAgIC9Pzzz+v555/XuXPndP/992vGjBmKiIiw3W7n4eGRr7HmV40aNRQbG5tje2HHkpcbN25I+v17uyXle2xVqlSRu7u7srKyivRnAAClCfNlyZsvfX19bcHa1dVVDRs2tHt5Wdu2bbVz506dPn1aTk5OtkB++fJlbd68WVOmTNHEiRNt7XN7NOCPb2H/o9q1a8swDAUHB9/R934DZuOZbsBBQkJC1LJlS7311ltKT0+Xr6+vQkJC9J///EcJCQk52p8/f9725z9+dYb0+ye3derUUUZGRo7j5syZY/uzYRiaM2eOKlSoYLtC+/DDDysrK8uunSTNnj1bFotFERERdzSurKysHLeA+fr6KjAw0FZf8+bNVbt2bb355pu2sHqrsd6Jhx9+WN9995127dpl25aWlqYFCxaoZs2aatiwYYH6zcvnn38uSWra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xES7/wIllZubm7y9vR1dBgAAuAsQukuJS5cuafKkibqeecPRpQCFtmjRIkeXABSKc4XymjxlKsEbAAAQukuL1NRUXc+8ob4POanKPRZHlwMAZdb5y4ZWfnNDqamphG4AAEDoLm2q3GNRYBUe1QcAx8l2dAEAAOAuQjoDAAAAAMAkhG4AAAAAAExC6AYAAAAAwCSEbgAAAAAATELoBgAAAADAJIRuAAAAAABMQugGAAAAAMAkhG4AAAAAAExC6AYAAAAAwCSEbgAAAAAATELoBgAAAADAJIRuAAAAAABMQugGAAAAAMAkhG4AAAAAAExC6AYAAAAAwCSEbgAAAAAATELoBgAAAADAJIRuAAAAAABMQugGAAAAAMAkhG4AAAAAAExC6AYAAAAAwCSEbgAAAAAATELoBgAAAADAJIRuAAAAAABMQugGAAAAAMAkhG4AAAAAAExC6AYAAAAAwCSEbgAAAAAATELoBgAAAADAJIRuAAAAAABMQugGAAAAAMAkhG4AAAAAAExC6AYAAAAAwCQODd1RUVFq0aKF3N3d5evrq549eyo2NtauTUhIiCwWi93y7LPP5tmvYRiaOHGiAgICVLFiRXXu3FlHjx41cygAAAAAAOTg0NC9detWRUZGKiYmRhs3blRmZqa6du2qtLQ0u3bPPPOMEhISbMusWbPy7HfWrFl6++23NX/+fO3evVuurq4KCwtTenq6mcMBAAAAAMBOeUeefMOGDXbrS5Yska+vr/bt26cOHTrYtleqVEn+/v756tMwDL311lt69dVX1aNHD0nS+++/Lz8/P61du1b9+/cvugEAAAAAAJCHu+qZ7qSkJEmSt7e33faPPvpIlStXVqNGjTR+/HhdvXr1ln2cOHFCiYmJ6ty5s22bp6enWrVqpV27duV6TEZGhpKTk+0WAABwe8yhAADkzaFXuv8oOztbI0eOVLt27dSoUSPb9scff1w1atRQYGCgfvjhB7300kuKjY3V6tWrc+0nMTFRkuTn52e33c/Pz7bvz6KiojRlypQiGgkAAGUHcygAAHm7a0J3ZGSkDh06pB07dthtHzZsmO3PjRs3VkBAgDp16qS4uDjVrl27SM49fvx4jR492raenJysoKCgIukbAIDSjDkUAIC83RWhe/jw4Vq3bp22bdumatWq5dm2VatWkqRjx47lGrpvPvt99uxZBQQE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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## PLOT ANALYSIS"
      ],
      "metadata": {
        "id": "UBNxd1_i0ijN"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Upon quick observation it is clear that those who used beer as their 'treatment' had a higher response to the mosquitos.\n",
        "\n",
        "You will notice in the Beer plot the median line is sitting fairly close to the 50th percentile showing normal distribution, whereas the water box median line is sitting in the upper quartile meaning the average user treated with beer had a higer repsonse and few with lower responses.\n",
        "\n",
        "The beer plot also has longer whiskers on both side of the plot meaningn there was a wider spread of data for that treatment.\n",
        "\n",
        "\n",
        "I found this page from Statistics Canada that explains how to read a box plots as I don't feel we touched many in our previous course: https://www150.statcan.gc.ca/n1/edu/power-pouvoir/ch12/5214889-eng.htm"
      ],
      "metadata": {
        "id": "1Bnldr1A0OEY"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## BASIC STATISTICS"
      ],
      "metadata": {
        "id": "VVIe3Mi802Fe"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Water Stats\n",
        "w_stats = mosq_df[mosq_df['Treatment'] == 'Water']['Response'].describe()\n",
        "# Water Mean\n",
        "w_mean = w_stats['mean']\n",
        "# Water Median\n",
        "w_median = mosq_df[mosq_df['Treatment'] == 'Water']['Response'].median()\n",
        "# Water Standard Deviation\n",
        "w_standDev = w_stats['std']\n",
        "\n",
        "\n",
        "# Beer Stats\n",
        "b_stats = mosq_df[mosq_df['Treatment'] == 'Beer']['Response'].describe()\n",
        "# Beer Mean\n",
        "b_mean = b_stats['mean']\n",
        "# Beer Median\n",
        "b_median = mosq_df[mosq_df['Treatment'] == 'Beer']['Response'].median()\n",
        "# Beer Standard Deviation\n",
        "b_standDev = b_stats['std']\n",
        "\n",
        "print(f\"Water Stats = Mean:{w_mean:.2f}, Median:{w_median:.2f}, and Standard Deviation:{w_standDev:.2f}\")\n",
        "\n",
        "print(f\"Beer Stats = Mean:{b_mean:.2f}, Median:{b_median:.2f}, and Standard Deviation:{b_standDev:.2f}\")\n",
        "\n"
      ],
      "metadata": {
        "id": "P0d2of130wW1",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a3a4f6f5-6676-4e4e-c9d2-9ab0ab7693cc"
      },
      "execution_count": 95,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Water Stats = Mean:19.22, Median:20.00, and Standard Deviation:3.67\n",
            "Beer Stats = Mean:23.60, Median:24.00, and Standard Deviation:4.13\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Permutation Test"
      ],
      "metadata": {
        "id": "FqCse2i-6uwe"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "b_responses = mosq_df[mosq_df['Treatment'] == 'Beer']['Response'].values\n",
        "w_responses = mosq_df[mosq_df['Treatment'] == 'Water']['Response'].values\n",
        "\n",
        "ob_dif = np.mean(b_responses) - np.mean(w_responses)\n",
        "\n",
        "num_perm = 10000\n",
        "perm_dif = []\n",
        "\n",
        "all_responses = np.concatenate([b_responses, w_responses])\n",
        "\n",
        "for i in range(num_perm):\n",
        "    np.random.shuffle(all_responses)\n",
        "\n",
        "    b_new = all_responses[:len(b_responses)]\n",
        "    w_new = all_responses[len(b_responses):]\n",
        "\n",
        "perm_dif.append(np.mean(b_new) - np.mean(w_new))\n",
        "p_value = np.mean(np.abs(perm_dif) >= np.abs(ob_dif))\n",
        "\n",
        "print(f\"Observed difference in means: {ob_dif:.1f}\")\n",
        "print(f\"P-Value from test: {p_value:.4f}\")\n",
        "\n",
        "plt.hist(perm_dif, bins=30, alpha=0.6, color='#249c34', edgecolor='#249c34', linewidth=5)\n",
        "plt.axvline(ob_dif, color ='#60a3e0', label=f'Observed Difference = {ob_dif:.1f}', linewidth=5)\n",
        "plt.axvline(-ob_dif, color = '#e8a52a', linewidth=5)\n",
        "plt.xlabel('Mean Difference')\n",
        "plt.ylabel('Frequency')\n",
        "plt.title('Beer Vs Mosquitos Permutation Test')\n",
        "plt.legend()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 508
        },
        "id": "ixF4DpmB6uII",
        "outputId": "7e884e5b-6a98-4686-b81b-bf967c287f2b"
      },
      "execution_count": 96,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Observed difference in means: 4.4\n",
            "P-Value from test: 0.0000\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.8.5"
    },
    "colab": {
      "provenance": []
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
